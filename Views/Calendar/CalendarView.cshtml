@{
    ViewData["Title"] = "Calendar";
}
<link rel="stylesheet" href="~/css/Calendar.css">
<a href="~/Task/Index">Task creator</a>
<div class="calendar">
    <div class="header">
        <span class="arrow" id="prevMonth">&#10094;</span>
        <h2 id="currentMonth">Липень 2023</h2>
        <span class="arrow" id="nextMonth">&#10095;</span>
    </div>
    <div class="days">
        <div class="day">Пн</div>
        <div class="day">Вт</div>
        <div class="day">Ср</div>
        <div class="day">Чт</div>
        <div class="day">Пт</div>
        <div class="day">Сб</div>
        <div class="day">Нд</div>
    </div>
    <div class="dates" id="calendarDates">
        <!-- Тут генеруватимуться дати місяця через JavaScript -->
    </div>


    
</div>
<table class="table table-dark table-hover"  id="taskTableId">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Done</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


<button id="C">CLICK</button>
@section Scripts
{
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script>
        let currenDTToSent = new Date();
        let dataTable = $("#taskTableId").DataTable({
            info: false,
            serverSide: true,
            searching: false,
            paging: false,
            sorting: false,
            ajax: {
                url: "@Url.Action("TaskHandler", "Task")",
                method: 'POST',
                data: function () {
                    return JSON.stringify(currenDTToSent);
                },
                contentType: 'application/json', // Встановлюємо заголовок Content-Type для передачі JSON даних

            },
            columns: [
                { data: 'name' },
                { data: 'description' },
                { data: 'done' },
                {
                    data: null,
                    sortable: false,
                    render: function (data, type) {
                        return `<button class="btn btn-success btn-sm center-block">Perform</button>`
                    }
                }
            ]
        });

        document.addEventListener('DOMContentLoaded', function () {
            const calendarDates = document.getElementById('calendarDates');
            const currentMonthDisplay = document.getElementById('currentMonth');
            const prevMonthArrow = document.getElementById('prevMonth');
            const nextMonthArrow = document.getElementById('nextMonth');
            
            let currentDate = new Date();

            function updateCalendar() {
                const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
                const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
                const daysInMonth = lastDayOfMonth.getDate();
                const startingDayOfWeek = firstDayOfMonth.getDay();
                const daysInPrevMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0).getDate();

                calendarDates.innerHTML = '';

                let dateCell;
                let dayCounter = 1;

                // Generate cells for previous month
                for (let i = startingDayOfWeek; i > 0; i--) {
                    dateCell = document.createElement('div');
                    dateCell.classList.add('date', 'other-month');
                    dateCell.innerText = daysInPrevMonth - i + 1;
                    calendarDates.appendChild(dateCell);
                }

                while (dayCounter <= daysInMonth) {
                    dateCell = document.createElement('div');
                    dateCell.classList.add('date', 'current-month');
                    dateCell.innerText = dayCounter;
                    calendarDates.appendChild(dateCell);
                    dayCounter++;

                    // Add event listener to each dateCell
                    dateCell.addEventListener('click', function () {
                        handleDateClick(this, currentDate); // Виклик обробника для натискання на дату
                    });
                }

                // Generate cells for next month if needed
                const remainingCells = 42 - startingDayOfWeek - daysInMonth;
                for (let i = 1; i <= remainingCells; i++) {
                    dateCell = document.createElement('div');
                    dateCell.classList.add('date', 'other-month');
                    dateCell.innerText = i;
                    calendarDates.appendChild(dateCell, currentDate);
                }
                currentMonthDisplay.innerText = new Intl.DateTimeFormat('en-US', { month: 'long', year: 'numeric' }).format(currentDate);
            }

            prevMonthArrow.addEventListener('click', function () {
                currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, currentDate.getDate());
                updateCalendar();
            });

            nextMonthArrow.addEventListener('click', function () {
                currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, currentDate.getDate());
                updateCalendar();
            });

            updateCalendar();
        });

        function handleDateClick(clickedDateCell, currentDT) {
            // Отримуємо текст дати, яку натиснули
            const clickedDateText = parseInt(clickedDateCell.innerText)+1;

            currentDT = new Date(currentDT.getFullYear(), currentDT.getMonth(), clickedDateText);
            // Можна виконати подальші дії з датою, яку натиснули, наприклад, відобразити додаткову інформацію, перейти до іншої сторінки, тощо.
            console.log('Натиснута дата:', currentDT);
            currenDTToSent = currentDT;
            
            dataTable.clear().draw();

        }
        

        

        $("#C").on('click', function () {
            $.ajax({
                url: "@Url.Action("TaskHandler", "Task")",
                method: 'POST',
                data: JSON.stringify(new Date()),
                contentType: 'application/json', // Встановлюємо заголовок Content-Type для передачі JSON даних
                success: function (response) {
                    // Обробка відповіді сервера
                },
                error: function (error) {
                    // Обробка помилки
                }
            });
        });
   
    </script>
}